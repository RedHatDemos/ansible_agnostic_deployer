#vim: set ft=ansible:
---
################################################################################
################################################################################
############ Step 000 Pre Infrastructure Deploy Tasks
################################################################################
################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/pre_infra.yml"
  tags:
    - step000
    - pre_infra_tasks

#################################################################################
#################################################################################
############# Step 001 Deploy Infrastructure
#################################################################################
#################################################################################

- name: Step 001 Deploy Infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step001
    - deploy_infrastructure
  tasks:
    - name: Deploy Infrastucture
      include: "{{ playbook_dir }}/cloud_providers/{{ cloud_provider }}_infrastructure_deployment.yml"
      tags:
        - infrastructure_deployment

    - name: Refresh cloud_provider cache
      environment:
        AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
        AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
        AWS_DEFAULT_REGION: "{{aws_region}}"
      shell: "{{ playbook_dir }}/inventory/{{ cloud_provider }}.py --refresh-cache"
      when: "not tower_run == 'true'"
      tags:
        - refresh_inventory
        - refresh_inventory_script

    - name: Refresh in-memory cloud_provider cache
      meta: refresh_inventory
      tags:
        - refresh_inventory
    - shell: "sleep 60"

# - name: tower workaround for inventory refresh_inventory
#   include: "{{ playbook_dir }}/cloud_providers/launch-inventory-sync.yml"
#   when: "{{ tower_run | default(false) }}"
#   tags: tower_workaround


- name: Wait for environment Readiness
  hosts:
    - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  gather_facts: false
  any_errors_fatal: True
  become: true
  tags:
    - step001
    - wait_ssh
  tasks:
    # This should be removed, too ec2 specific, this can be handled by env spcific code.
    # - name: Store bastion hostname as a fact
    #   set_fact:
    #     bastion_hostname: "{{ hostvars[ groups[ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') ].0 ]['ec2_public_dns_name'] }}"
    - name: wait for host to be available
      wait_for:
        host: '{{ inventory_hostname }}'
        port: 22
        search_regex: OpenSSH
    - name: Configure local .ssh/config for bastion proxy use
      gather_facts: false
      include: "{{playbook_dir}}/cloud_providers/{{cloud_provider}}_ssh_config_setup.yml"
      when: 'deploy_local_ssh_config is defined and deploy_local_ssh_config == "true"'

#################################################################################
#################################################################################
############# Step 002 Post Infrastructure Deploy Tasks
#################################################################################
#################################################################################
- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_infra.yml"
  tags:
    - step002
    - post_infra_tasks

#################################################################################
#################################################################################
############## Step 003 Pre Software Deploy Tasks
#################################################################################
#################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/pre_software.yml"
  tags:
    - step003
    - pre_software_tasks


## We need to consider what to do with this part, should we turn it into a playbook/role?
- name: Step 003 - Create env key
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - step003
    - generate_env_keys
  tasks:
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f ./workdir/{{env_authorized_key}} -q -N ""
      args:
        creates: ./workdir/{{env_authorized_key}}



## This requires Ansible 2.3 (boo)
# - name: Generate environment key
#   openssl_privatekey:
#   path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pem"
#   state: present
# - name: Generate environment Public key
#   openssl_publickey:
#   path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pub"
#   privatekey_path: "{{ playbook_dir }}/workdir/{{env_authorized_key}}.pem"
#   state: present

##################################################################################
##################################################################################
############## Step 004 Software Deploy Tasks
##################################################################################
##################################################################################

# Cloudformation template or equivalent should tag all hosts with Project:{{ env_type }}-{{ guid }}

- name: Configure subscriptions
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  become: true
  any_errors_fatal: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - subscriptions
  roles:
    - { role: subscriptions, when: "{{ use_subscriptions | default(false) }}" }

- name: Configure repositories
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  become: true
  any_errors_fatal: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - deploy_software
    - repositories
  roles:
    - repositories

- name: Install and configure common software
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  serial: 15
  become: true
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - common_tasks
  roles:
    -  { role: common, when: "{{ install_common }}" }

- name: Step 004 Deploy Software
  hosts: "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  become: true
  gather_facts: False
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - step004
    - set_env_authorized_key
  roles:
    -  { role: set_env_authorized_key, when: "{{ set_env_authorized_key }}" }



- name: Configuring Bastion Hosts
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"

  become: true
  vars_files:
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ playbook_dir }}/configs/{{ env_type }}/ssh_vars.yml"
  roles:
    -  { role: bastion, when: "{{ install_bastion }}" }
  tags:
    - step004
    - bastion_tasks

- include: "{{ playbook_dir }}/software_playbooks/{{ software_to_deploy }}.yml"
  tags:
    - step004
    - deploy_software

################################################################################
################################################################################
############ Step 005 Post Software Deploy Tasks
################################################################################
################################################################################

- include: "{{ playbook_dir }}/configs/{{ env_type }}/post_software.yml"
  tags:
    - step005
    - post_software
    - post_software_tasks
